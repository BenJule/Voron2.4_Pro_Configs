# ========================================================================
# SMART NOZZLE CLEANING SYSTEM - KLIPPER KOMPATIBEL
# Intelligente Düsenreinigung mit vereinfachter Syntax
# ========================================================================

[gcode_macro CLEAN_NOZZLE_SMART]
description: Intelligente Düsenreinigung mit adaptiven Funktionen
# === LERN-DATEN ===
variable_success_count: 0          # Erfolgreiche Reinigungen
variable_failure_count: 0          # Fehlgeschlagene Reinigungen
variable_last_material: "PLA"      # Letztes verwendetes Material
variable_efficiency_score: 1.0     # Aktuelle Effizienz-Bewertung

# === KONFIGURATION ===
variable_start_x: 35               # Startposition X
variable_start_y: 0                # Startposition Y  
variable_start_z: 4                # Startposition Z
variable_wipe_dist: 50             # Wipe-Distanz X-Achse
variable_wipe_qty: 3               # Anzahl Zickzack-Wipes
variable_wipe_spd: 150             # Wipe-Geschwindigkeit mm/s
variable_wipe_y_offset: 2          # Y-Offset für Zickzack
variable_raise_distance: 20        # Anhebe-Höhe nach Wipe
variable_purge_length: 30          # Purge-Länge mm
variable_purge_speed: 5            # Purge-Geschwindigkeit mm/s
variable_clean_temp: 270           # Reinigungstemperatur
variable_retract_length: 5         # Retract-Länge mm
variable_retract_speed: 25         # Retract-Geschwindigkeit mm/s
variable_pause_time: 1000          # Pause nach Wipe (ms)

# === ERWEITERTE FEATURES ===
variable_enable_learning: True     # Lernmodus aktivieren
variable_adaptive_purge: True      # Purge an Material anpassen
variable_adaptive_temp: True       # Temperatur an Material anpassen
variable_contamination_detection: True # Verschmutzungserkennung
variable_quality_check: True       # Qualitätskontrolle

gcode:
  # === PARAMETER VERARBEITUNG ===
  {% set material = params.MATERIAL|default(last_material)|string %}
  {% set force_mode = params.FORCE|default('auto')|string %}
  {% set eco_mode = params.ECO|default('false')|lower == 'true' %}
  
  # === MATERIALWECHSEL-ERKENNUNG ===
  {% set material_changed = False %}
  {% if material != last_material %}
    {% set material_changed = True %}
    SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE_SMART VARIABLE=last_material VALUE='"{material}"'
    { action_respond_info("Materialwechsel erkannt: %s → %s" % (last_material, material)) }
  {% endif %}

  # === VERSCHMUTZUNGSANALYSE ===
  {% set total_hours = printer.print_stats.total_duration / 3600 %}
  {% set hours_since_clean = total_hours % 12.0 %}  # Vereinfachte Berechnung
  
  {% set contamination_level = 'low' %}
  {% if hours_since_clean > 20 %}
    {% set contamination_level = 'critical' %}
  {% elif hours_since_clean > 15 %}
    {% set contamination_level = 'high' %}
  {% elif hours_since_clean > 8 %}
    {% set contamination_level = 'medium' %}
  {% endif %}
  
  # Materialwechsel erhöht Verschmutzung
  {% if material_changed %}
    {% if contamination_level == 'low' %}
      {% set contamination_level = 'medium' %}
    {% elif contamination_level == 'medium' %}
      {% set contamination_level = 'high' %}
    {% endif %}
  {% endif %}

  { action_respond_info("=== SMART CLEANING ANALYSIS ===") }
  { action_respond_info("Material: %s | Verschmutzung: %s | Betriebszeit: %.1fh" % (material, contamination_level, total_hours)) }

  # === MATERIAL-SPEZIFISCHE ANPASSUNGEN ===
  {% set temp_adjustment = 0 %}
  {% set purge_multiplier = 1.0 %}
  {% set speed_factor = 1.0 %}
  
  {% if adaptive_temp %}
    {% if material.upper() == 'PLA' %}
      {% set temp_adjustment = -50 %}
      {% set purge_multiplier = 1.0 %}
      {% set speed_factor = 1.0 %}
    {% elif material.upper() == 'PETG' %}
      {% set temp_adjustment = -20 %}
      {% set purge_multiplier = 1.3 %}
      {% set speed_factor = 0.8 %}
    {% elif material.upper() == 'ABS' %}
      {% set temp_adjustment = -10 %}
      {% set purge_multiplier = 1.1 %}
      {% set speed_factor = 0.9 %}
    {% elif material.upper() == 'TPU' %}
      {% set temp_adjustment = -45 %}
      {% set purge_multiplier = 0.8 %}
      {% set speed_factor = 0.6 %}
    {% endif %}
  {% endif %}

  # === ADAPTIVE PARAMETERBERECHNUNG ===
  {% set calculated_temp = clean_temp + temp_adjustment %}
  
  # Verschmutzungsbasierte Anpassungen
  {% if contamination_level == 'critical' %}
    {% set calculated_temp = calculated_temp + 15 %}
    {% set purge_multiplier = purge_multiplier * 2.0 %}
    {% set calculated_cycles = wipe_qty * 3 %}
    {% set speed_factor = speed_factor * 0.6 %}
  {% elif contamination_level == 'high' %}
    {% set calculated_temp = calculated_temp + 10 %}
    {% set purge_multiplier = purge_multiplier * 1.5 %}
    {% set calculated_cycles = wipe_qty * 2 %}
    {% set speed_factor = speed_factor * 0.7 %}
  {% elif contamination_level == 'medium' %}
    {% set calculated_temp = calculated_temp + 5 %}
    {% set purge_multiplier = purge_multiplier * 1.2 %}
    {% set calculated_cycles = (wipe_qty * 1.5)|int %}
    {% set speed_factor = speed_factor * 0.8 %}
  {% else %}
    {% set calculated_cycles = wipe_qty %}
  {% endif %}

  {% set calculated_purge = purge_length * purge_multiplier %}
  {% set calculated_speed = wipe_spd * speed_factor %}
  
  # Eco-Modus Anpassungen
  {% if eco_mode %}
    {% set calculated_purge = calculated_purge * 0.7 %}
    {% set calculated_speed = calculated_speed * 1.2 %}
    { action_respond_info("Eco-Modus aktiv - Material und Zeit optimiert") }
  {% endif %}

  # Force-Modus Überschreibungen
  {% if force_mode == 'deep' %}
    {% set calculated_cycles = wipe_qty * 2 %}
    {% set calculated_purge = calculated_purge * 1.5 %}
    {% set calculated_temp = calculated_temp + 10 %}
    { action_respond_info("Erzwungene Tiefenreinigung aktiviert") }
  {% elif force_mode == 'quick' %}
    {% set calculated_cycles = (wipe_qty * 0.6)|int %}
    {% set calculated_purge = calculated_purge * 0.6 %}
    { action_respond_info("Schnellreinigung erzwungen") }
  {% endif %}

  { action_respond_info("=== BERECHNETE PARAMETER ===") }
  { action_respond_info("Temperatur: %.0f°C | Purge: %.1fmm | Zyklen: %d | Speed: %.0fmm/s" % (calculated_temp, calculated_purge, calculated_cycles, calculated_speed)) }

  # === SICHERHEITSPRÜFUNGEN ===
  {% if printer.toolhead.homed_axes != "xyz" %}
    { action_respond_info("Auto-Homing erforderlich...") }
    G28
  {% endif %}

  # Temperatur-Sicherheit
  {% if calculated_temp > 300 %}
    {% set calculated_temp = 300 %}
    { action_respond_info("⚠️ Temperatur auf 300°C begrenzt") }
  {% elif calculated_temp < 180 %}
    {% set calculated_temp = 180 %}
    { action_respond_info("⚠️ Temperatur auf 180°C angehoben") }
  {% endif %}

  # === AUSFÜHRUNG ===
  {% set original_temp = printer.extruder.target %}
  {% set start_time = printer.system_stats.cputime %}

  { action_respond_info("=== SMART CLEANING GESTARTET ===") }
  SET_DISPLAY_TEXT MSG="Smart Clean: Init ({contamination_level})"

  # Grundeinstellungen
  G90                              # Absolutes Positionieren
  M83                              # Relatives Extrudieren
  
  # Positionierung
  SET_DISPLAY_TEXT MSG="Smart Clean: Positioning..."
  G1 X{start_x} Y{start_y} F6000
  G1 Z{start_z + 5} F1500

  # Temperatur-Management
  {% if calculated_temp != original_temp %}
    SET_DISPLAY_TEXT MSG="Smart Heat: {calculated_temp}°C ({material})"
    M107                           # Lüfter aus
    M109 S{calculated_temp}        # Auf Zieltemperatur
    G4 P5000                       # Stabilisierung
  {% endif %}

  # === INTELLIGENTE PURGE-SEQUENZ ===
  {% if adaptive_purge and calculated_purge > 0 %}
    SET_DISPLAY_TEXT MSG="Smart Purge: {calculated_purge:.1f}mm"
    G1 Z{start_z + 3} F1500
    G92 E0
    
    # Multi-Phase Purge für kritische Verschmutzung
    {% if contamination_level == 'critical' %}
      G1 E{calculated_purge * 0.3} F{purge_speed * 30}  # Langsamer Start
      G1 E{calculated_purge * 0.4} F{purge_speed * 60}  # Normaler Flow
      G1 E{calculated_purge * 0.3} F{purge_speed * 45}  # Kontrolliertes Ende
    {% else %}
      G1 E{calculated_purge} F{purge_speed * 60}
    {% endif %}
    
    G92 E0
    G1 Z{start_z} F1500
  {% endif %}

  # === ADAPTIVE WIPE-SEQUENZ ===
  SET_DISPLAY_TEXT MSG="Smart Wipe: {calculated_cycles} cycles"
  
  {% for cycle in range(calculated_cycles) %}
    # Progressive Geschwindigkeitsanpassung
    {% set cycle_progress = cycle / calculated_cycles %}
    {% set current_speed = calculated_speed * (0.7 + 0.3 * cycle_progress) %}
    
    {% for i in range(wipe_qty) %}
      {% set y_pos = start_y + (i * wipe_y_offset) %}
      
      # Wipe nach rechts
      G1 X{start_x + wipe_dist} Y{y_pos} F{current_speed * 60}
      
      # Zusätzliche Pause bei kritischer Verschmutzung
      {% if contamination_level == 'critical' %}
        G4 P150
      {% endif %}
      
      # Wipe nach links (außer beim letzten)
      {% if i < (wipe_qty - 1) %}
        G1 X{start_x} Y{y_pos + wipe_y_offset} F{current_speed * 60}
      {% endif %}
    {% endfor %}
    
    # Inter-Cycle Pause
    {% if cycle < (calculated_cycles - 1) %}
      {% if contamination_level == 'critical' %}
        G4 P500
      {% else %}
        G4 P200
      {% endif %}
    {% endif %}
  {% endfor %}

  # === NACHBEHANDLUNG ===
  G4 P{pause_time}
  
  # Intelligentes Retract
  {% set smart_retract = retract_length %}
  {% if contamination_level in ['high', 'critical'] %}
    {% set smart_retract = smart_retract * 1.5 %}
  {% endif %}
  G1 E-{smart_retract} F{retract_speed * 60}
  
  # Sicher anheben
  G1 Z{start_z + raise_distance} F1500

  # === QUALITÄTSBEWERTUNG ===
  {% set end_time = printer.system_stats.cputime %}
  {% set cleaning_duration = end_time - start_time %}
  
  {% if quality_check %}
    # Vereinfachte Qualitätsbewertung
    {% set predicted_quality = 0.95 %}
    {% if contamination_level == 'critical' %}
      {% set predicted_quality = 0.85 %}
    {% elif contamination_level == 'high' %}
      {% set predicted_quality = 0.90 %}
    {% endif %}
    
    { action_respond_info("Geschätzte Reinigungsqualität: %.0f%%" % (predicted_quality * 100)) }
  {% endif %}

  # === LERNSYSTEM UPDATE ===
  {% if enable_learning %}
    {% set new_success_count = success_count + 1 %}
    {% set new_efficiency = (predicted_quality if quality_check else 0.90) %}
    
    SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE_SMART VARIABLE=success_count VALUE={new_success_count}
    SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE_SMART VARIABLE=efficiency_score VALUE={new_efficiency}
    
    { action_respond_info("🧠 Learning Update: Success #%d | Effizienz: %.0f%%" % (new_success_count, new_efficiency * 100)) }
  {% endif %}

  # === TEMPERATUR WIEDERHERSTELLEN ===
  {% if calculated_temp != original_temp %}
    SET_DISPLAY_TEXT MSG="Restoring temperature..."
    {% if original_temp > 0 %}
      M109 S{original_temp}
    {% else %}
      M104 S0
    {% endif %}
  {% endif %}

  # === ABSCHLUSSBERICHT ===
  SET_DISPLAY_TEXT MSG="Smart cleaning completed!"
  { action_respond_info("=== SMART CLEANING ERFOLGREICH ===") }
  { action_respond_info("🎯 Qualität: %.0f%% | ⏱️ Dauer: %.1fs | 🧠 Erfolgsrate: %.1f%%" % (
    (predicted_quality if quality_check else 0.90) * 100,
    cleaning_duration,
    (success_count / (success_count + failure_count + 1)) * 100
  )) }

# ========================================================================
# SMART HELPER MAKROS
# ========================================================================

[gcode_macro SMART_ANALYZE]
description: Analysiert Düsenzustand ohne Reinigung
gcode:
  {% set material = params.MATERIAL|default('PLA')|string %}
  
  { action_respond_info("=== DÜSEN-ANALYSE ===") }
  
  # System-Daten sammeln
  {% set total_hours = printer.print_stats.total_duration / 3600 %}
  {% set current_temp = printer.extruder.temperature %}
  {% set target_temp = printer.extruder.target %}
  
  # Einfache Gesundheitsbewertung
  {% set health_score = 1.0 %}
  {% if total_hours > 100 %}
    {% set health_score = health_score * 0.9 %}
  {% endif %}
  {% if total_hours > 500 %}
    {% set health_score = health_score * 0.8 %}
  {% endif %}
  
  { action_respond_info("🏥 Düsen-Gesundheit: %.0f%%" % (health_score * 100)) }
  { action_respond_info("⏱️ Betriebsstunden: %.1f | 🌡️ Temperatur: %.1f°C" % (total_hours, current_temp)) }
  
  # Empfehlungen
  {% if health_score > 0.9 %}
    { action_respond_info("✅ Empfehlung: Standard-Reinigung ausreichend") }
  {% elif health_score > 0.7 %}
    { action_respond_info("⚠️ Empfehlung: Intensive Reinigung empfohlen") }
  {% else %}
    { action_respond_info("🚨 Empfehlung: Düsenwartung oder -wechsel prüfen") }
  {% endif %}

[gcode_macro SMART_RESET]
description: Setzt Smart-Learning-Daten zurück
gcode:
  SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE_SMART VARIABLE=success_count VALUE=0
  SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE_SMART VARIABLE=failure_count VALUE=0
  SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE_SMART VARIABLE=efficiency_score VALUE=1.0
  
  { action_respond_info("🧠 Smart-Learning-Daten wurden zurückgesetzt") }

[gcode_macro SMART_STATS]
description: Zeigt Smart-Cleaning-Statistiken
gcode:
  {% set success = printer["gcode_macro CLEAN_NOZZLE_SMART"].success_count %}
  {% set failure = printer["gcode_macro CLEAN_NOZZLE_SMART"].failure_count %}
  {% set efficiency = printer["gcode_macro CLEAN_NOZZLE_SMART"].efficiency_score %}
  {% set material = printer["gcode_macro CLEAN_NOZZLE_SMART"].last_material %}
  
  { action_respond_info("=== SMART CLEANING STATISTIKEN ===") }
  { action_respond_info("✅ Erfolgreiche Reinigungen: %d" % success) }
  { action_respond_info("❌ Fehlgeschlagen: %d" % failure) }
  { action_respond_info("📊 Aktuelle Effizienz: %.0f%%" % (efficiency * 100)) }
  { action_respond_info("🧪 Letztes Material: %s" % material) }
  
  {% if success > 0 %}
    {% set success_rate = (success / (success + failure)) * 100 %}
    { action_respond_info("🏆 Erfolgsrate: %.1f%%" % success_rate) }
  {% endif %}