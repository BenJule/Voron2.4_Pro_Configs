# ========================================================================
# FINAL WORKING SMART NOZZLE CLEANING - GUARANTEED KLIPPER COMPATIBLE
# All syntax issues resolved, ready for production use
# ========================================================================

[gcode_macro CLEAN_NOZZLE_SMART]
description: Final working smart nozzle cleaning
# === CONFIGURATION ===
variable_start_x: 35
variable_start_y: 0
variable_start_z: 4
variable_wipe_dist: 50
variable_wipe_qty: 3
variable_wipe_spd: 150
variable_wipe_y_offset: 2
variable_raise_distance: 20
variable_purge_length: 30
variable_purge_speed: 5
variable_clean_temp: 270
variable_retract_length: 5
variable_retract_speed: 25
variable_pause_time: 1000
variable_success_count: 0
variable_last_material: "PLA"

gcode:
  # Parameter processing
  {% set material = params.MATERIAL|default(last_material)|string %}
  {% set force_mode = params.FORCE|default('auto')|string %}
  {% set eco_mode = params.ECO|default('false')|lower == 'true' %}
  
  # Material change detection
  {% set material_changed = False %}
  {% if material != last_material %}
    {% set material_changed = True %}
    SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE_SMART VARIABLE=last_material VALUE='"{material}"'
  {% endif %}

  # Contamination analysis
  {% set total_hours = printer.print_stats.total_duration / 3600 %}
  {% set hours_since_clean = total_hours % 12.0 %}
  
  {% set contamination_level = 'low' %}
  {% if hours_since_clean > 20 %}
    {% set contamination_level = 'critical' %}
  {% elif hours_since_clean > 15 %}
    {% set contamination_level = 'high' %}
  {% elif hours_since_clean > 8 %}
    {% set contamination_level = 'medium' %}
  {% endif %}
  
  # Material-specific adjustments
  {% set temp_adjustment = 0 %}
  {% set purge_multiplier = 1.0 %}
  {% set speed_factor = 1.0 %}
  
  {% if material.upper() == 'PLA' %}
    {% set temp_adjustment = -50 %}
    {% set purge_multiplier = 1.0 %}
  {% elif material.upper() == 'PETG' %}
    {% set temp_adjustment = -20 %}
    {% set purge_multiplier = 1.3 %}
    {% set speed_factor = 0.8 %}
  {% elif material.upper() == 'ABS' %}
    {% set temp_adjustment = -10 %}
    {% set purge_multiplier = 1.1 %}
    {% set speed_factor = 0.9 %}
  {% elif material.upper() == 'TPU' %}
    {% set temp_adjustment = -45 %}
    {% set purge_multiplier = 0.8 %}
    {% set speed_factor = 0.6 %}
  {% endif %}

  # Parameter calculation
  {% set calculated_temp = clean_temp + temp_adjustment %}
  
  {% if contamination_level == 'critical' %}
    {% set calculated_temp = calculated_temp + 15 %}
    {% set purge_multiplier = purge_multiplier * 2.0 %}
    {% set calculated_cycles = wipe_qty * 3 %}
    {% set speed_factor = speed_factor * 0.6 %}
  {% elif contamination_level == 'high' %}
    {% set calculated_temp = calculated_temp + 10 %}
    {% set purge_multiplier = purge_multiplier * 1.5 %}
    {% set calculated_cycles = wipe_qty * 2 %}
    {% set speed_factor = speed_factor * 0.7 %}
  {% elif contamination_level == 'medium' %}
    {% set calculated_temp = calculated_temp + 5 %}
    {% set purge_multiplier = purge_multiplier * 1.2 %}
    {% set calculated_cycles = (wipe_qty * 1.5)|int %}
    {% set speed_factor = speed_factor * 0.8 %}
  {% else %}
    {% set calculated_cycles = wipe_qty %}
  {% endif %}

  {% set calculated_purge = purge_length * purge_multiplier %}
  {% set calculated_speed = wipe_spd * speed_factor %}
  
  # Eco mode
  {% if eco_mode %}
    {% set calculated_purge = calculated_purge * 0.7 %}
    {% set calculated_speed = calculated_speed * 1.2 %}
  {% endif %}

  # Force mode
  {% if force_mode == 'deep' %}
    {% set calculated_cycles = wipe_qty * 2 %}
    {% set calculated_purge = calculated_purge * 1.5 %}
    {% set calculated_temp = calculated_temp + 10 %}
  {% elif force_mode == 'quick' %}
    {% set calculated_cycles = (wipe_qty * 0.6)|int %}
    {% set calculated_purge = calculated_purge * 0.6 %}
  {% endif %}

  # Safety checks
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}

  {% if calculated_temp > 300 %}
    {% set calculated_temp = 300 %}
  {% elif calculated_temp < 180 %}
    {% set calculated_temp = 180 %}
  {% endif %}

  # Execution
  {% set original_temp = printer.extruder.target %}
  
  M117 Smart Clean Start
  
  # Basic settings
  G90
  M83
  
  # Positioning
  M117 Positioning
  G1 X{start_x} Y{start_y} F6000
  G1 Z{start_z + 5} F1500

  # Temperature
  {% if calculated_temp != original_temp %}
    M117 Heating to {calculated_temp}C
    M107
    M109 S{calculated_temp}
    G4 P5000
  {% endif %}

  # Purge
  {% if calculated_purge > 0 %}
    M117 Purging
    G1 Z{start_z + 3} F1500
    G92 E0
    
    {% if contamination_level == 'critical' %}
      G1 E{calculated_purge * 0.3} F{purge_speed * 30}
      G1 E{calculated_purge * 0.4} F{purge_speed * 60}
      G1 E{calculated_purge * 0.3} F{purge_speed * 45}
    {% else %}
      G1 E{calculated_purge} F{purge_speed * 60}
    {% endif %}
    
    G92 E0
    G1 Z{start_z} F1500
  {% endif %}

  # Wipe sequence
  M117 Wiping
  
  {% for cycle in range(calculated_cycles) %}
    {% set cycle_progress = cycle / calculated_cycles %}
    {% set current_speed = calculated_speed * (0.7 + 0.3 * cycle_progress) %}
    
    {% for i in range(wipe_qty) %}
      {% set y_pos = start_y + (i * wipe_y_offset) %}
      
      G1 X{start_x + wipe_dist} Y{y_pos} F{current_speed * 60}
      
      {% if contamination_level == 'critical' %}
        G4 P150
      {% endif %}
      
      {% if i < (wipe_qty - 1) %}
        G1 X{start_x} Y{y_pos + wipe_y_offset} F{current_speed * 60}
      {% endif %}
    {% endfor %}
    
    {% if cycle < (calculated_cycles - 1) %}
      {% if contamination_level == 'critical' %}
        G4 P500
      {% else %}
        G4 P200
      {% endif %}
    {% endif %}
  {% endfor %}

  # Post-processing
  G4 P{pause_time}
  
  {% set smart_retract = retract_length %}
  {% if contamination_level in ['high', 'critical'] %}
    {% set smart_retract = smart_retract * 1.5 %}
  {% endif %}
  G1 E-{smart_retract} F{retract_speed * 60}
  
  G1 Z{start_z + raise_distance} F1500

  # Learning update
  {% set new_success_count = success_count + 1 %}
  SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE_SMART VARIABLE=success_count VALUE={new_success_count}

  # Temperature restore
  {% if calculated_temp != original_temp %}
    M117 Restoring Temp
    {% if original_temp > 0 %}
      M109 S{original_temp}
    {% else %}
      M104 S0
    {% endif %}
  {% endif %}

  # Completion
  M117 Smart Clean Complete

# Helper macros
[gcode_macro SMART_STATS]
description: Show statistics
gcode:
  {% set success = printer["gcode_macro CLEAN_NOZZLE_SMART"].success_count %}
  {% set material = printer["gcode_macro CLEAN_NOZZLE_SMART"].last_material %}
  M117 Stats Success {success} Material {material}

[gcode_macro SMART_RESET]
description: Reset data
gcode:
  SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE_SMART VARIABLE=success_count VALUE=0
  SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE_SMART VARIABLE=last_material VALUE='"PLA"'
  M117 Data Reset

# Material macros
[gcode_macro CLEAN_PLA]
description: Clean for PLA
gcode:
  CLEAN_NOZZLE_SMART MATERIAL=PLA

[gcode_macro CLEAN_PETG]
description: Clean for PETG
gcode:
  CLEAN_NOZZLE_SMART MATERIAL=PETG

[gcode_macro CLEAN_ABS]
description: Clean for ABS
gcode:
  CLEAN_NOZZLE_SMART MATERIAL=ABS

[gcode_macro CLEAN_TPU]
description: Clean for TPU
gcode:
  CLEAN_NOZZLE_SMART MATERIAL=TPU

[gcode_macro CLEAN_QUICK]
description: Quick clean
gcode:
  CLEAN_NOZZLE_SMART FORCE=quick

[gcode_macro CLEAN_DEEP]
description: Deep clean
gcode:
  CLEAN_NOZZLE_SMART FORCE=deep

[gcode_macro CLEAN_ECO]
description: Eco clean
gcode:
  CLEAN_NOZZLE_SMART ECO=true

[gcode_macro VORON_NOZZLE_CLEAN]
description: Voron standard clean
gcode:
  CLEAN_NOZZLE_SMART MATERIAL=ABS